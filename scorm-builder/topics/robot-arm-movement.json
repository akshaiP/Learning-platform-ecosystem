{
    "id": "robot-arm-movement",
    "title": "Robot Arm Movement and Coordinate Printing",
    "description": "Learn to program the Elephant Robot (myCobot 320Pi) with Blockly for precise movement control and coordinate tracking.",
    "keywords": ["robotics", "blockly", "mycobot", "coordinates", "programming", "automation"],
    
    "learning_objectives": [
      "Move the myCobot 320Pi robot arm to different positions using Blockly",
      "Retrieve the robot's current coordinates after each movement",
      "Print coordinates to the console for monitoring and debugging", 
      "Create automated movement sequences with coordinate tracking"
    ],
    
    "difficulty_level": "beginner",
    "estimated_duration": "PT45M",
    
    "content": {
      "task_statement": "Program the Elephant Robot (myCobot 320Pi) with Blockly to move to specific coordinates and track its position throughout the movement sequence.",
      
      "task_requirements": [
        "Use Blockly programming interface to control robot movements",
        "Move the robot arm to at least 3 different positions",
        "Retrieve and display coordinates after each movement",
        "Create a sequence that demonstrates X, Y, Z coordinate changes",
        "Print coordinate data to console for verification"
      ],
      
      "concepts": [
        {
          "title": "Robot Coordinate Systems",
          "summary": "The myCobot 320Pi uses a 6-axis coordinate system with X, Y, Z for position and RX, RY, RZ for rotation angles. Understanding this system is crucial for precise movement control.",
          "learn_more_context": "coordinate_systems"
        },
        {
          "title": "Blockly Programming Interface",
          "summary": "Blockly provides a visual programming environment where you drag and drop code blocks to create robot movement sequences. It's beginner-friendly yet powerful for complex automation.",
          "learn_more_context": "blockly_interface"
        },
        {
          "title": "Movement Control Blocks",
          "summary": "Key Blockly blocks for robot control include 'Move to Position', 'Get Current Coords', 'Set Joint Angles', and 'Print to Console'. Each block has specific parameters and use cases.",
          "learn_more_context": "movement_blocks"
        },
        {
          "title": "Coordinate Tracking",
          "summary": "Real-time coordinate tracking allows you to monitor robot position, verify movements, debug programs, and create responsive automation sequences.",
          "learn_more_context": "coordinate_tracking"
        }
      ],
      
      "hints": [
        "Start by connecting to your myCobot 320Pi robot through the Blockly interface. Ensure proper USB or wireless connection.",
        "Use the 'Get Current Coords' block first to see the robot's starting position before making any movements.",
        "When setting coordinates, remember that X, Y, Z are in millimeters. Typical workspace ranges: X(-300 to 300), Y(-300 to 300), Z(0 to 400).",
        "Always use the 'Print to Console' block after movement commands to verify the robot reached the intended position.",
        "Create smooth movements by using reasonable coordinate increments and allowing time between movements.",
        "If movements seem erratic, check that your coordinate values are within the robot's physical workspace limits."
      ],
      
      "practice": {
        "description": "Practice creating movement sequences with the myCobot 320Pi simulator before working with the physical robot. This allows safe experimentation with coordinate programming."
      }
    },
    
    "quiz": {
      "question": "What coordinate system does the myCobot 320Pi robot use for position and rotation control?",
      "options": [
        "Only X, Y coordinates for simple 2D movement",
        "X, Y, Z for position and RX, RY, RZ for rotation angles (6-axis system)",
        "Polar coordinates with radius and angle measurements",
        "Joint angles only without Cartesian coordinates"
      ],
      "correct_answer": 1,
      "explanation": "The myCobot 320Pi uses a 6-axis coordinate system where X, Y, Z represent the end-effector position in 3D space, while RX, RY, RZ represent rotation angles around each axis. This allows for precise control of both position and orientation."
    },
    
    "chat_contexts": {
      "coordinate_systems": "robot-coordinate-systems-detailed",
      "blockly_interface": "blockly-programming-guide",
      "movement_blocks": "robot-movement-control-blocks",
      "coordinate_tracking": "real-time-coordinate-monitoring",
      "hardware_setup": "mycobot-320pi-setup-guide",
      "troubleshooting": "robot-movement-troubleshooting"
    },
    
    "styling": {
      "primaryColor": "#007bff"
    }
  }  