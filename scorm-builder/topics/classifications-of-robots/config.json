{
    "title": "Types and Classifications of Robots",
    "description": "Explore various robot classification systems, key technical concepts, components, and generations essential to understanding robotics.",
    "learning_objectives": [
      "Understand fundamental robot classification systems",
      "Learn key technical concepts like joints and degrees of freedom",
      "Identify essential robot components",
      "Distinguish robot generations and their capabilities",
      "Explore different robot morphologies and application domains"
    ],
    "content": {
      "company_logo": {
        "src": "nebula-logo.png",
        "alt": "Nebula KnowLab Logo"
      },
      "task_statement": "Perform robot classification and joint control using ROS and RViz",
      "task_requirements": [
        "Open a new terminal",
        "Run command roslaunch nebula nebula1.launch to start RViz",
        "Open VS Code and create a new Python file with given joint control script",
        "Run the Python script to control robot joints and observe movement in RViz",
        "Modify joint positions in the script to move the robot to desired coordinates"
      ],
      "hero_image": {
        "src": "robot-arm-hero.jpg",
        "alt": "Robot arm movement visualization",
        "caption": "Visualize and control robot movements using ROS and RViz"
      },
      "concepts": [
        {
          "title": "Fundamental Robot Classification Systems",
          "summary": "Includes mechanical structures like Cartesian, SCARA, Articulated, and Delta robots",
          "image": {
            "src": "robot-classification.jpg",
            "alt": "Robot classification types"
          },
          "learn_more_context": "robot_classification"
        },
        {
          "title": "Key Technical Concepts",
          "summary": "Degrees of Freedom (DOF), Revolute, Prismatic, Spherical, and Universal joints",
          "image": {
            "src": "robot-arm-hero.jpg",
            "alt": "Robot joints and degrees of freedom"
          },
          "learn_more_context": "robot_joints_dof"
        },
        {
          "title": "Collaboration Level",
          "summary": "Coexistence, Sequential, Cooperation, and Responsive Collaboration (Cobots)",
          "image": {
            "src": "robot-types.jpg",
            "alt": "Robot collaboration levels"
          },
          "learn_more_context": "robot_collaboration"
        },
        {
          "title": "Essential Robot Components",
          "summary": "Sensors, Actuators, and Controllers",
          "image": {
            "src": "nebula-logo.png",
            "alt": "Robot components"
          },
          "learn_more_context": "robot_components"
        },
        {
          "title": "Robot Generations",
          "summary": "From Manipulators to AI-enabled robots",
          "image": {
            "src": "robot-types.jpg",
            "alt": "Robot generations"
          },
          "learn_more_context": "robot_generations"
        },
        {
          "title": "Morphology",
          "summary": "Anthropomorphic, Zoomorphic, and Technomorphic robots",
          "image": {
            "src": "robot-classification.jpg",
            "alt": "Robot morphology types"
          },
          "learn_more_context": "robot_morphology"
        }
      ],
      "hints": [
        {
          "text": "Open a terminal and launch ROS visualization with roslaunch nebula nebula1.launch",
          "step_image": {
            "src": "robot-arm-hero.jpg",
            "alt": "ROS launch command in terminal",
            "caption": "Step 1: Launch ROS and open RViz window"
          }
        },
        {
          "text": "Create and run the joint control Python script in VS Code",
          "step_image": {
            "src": "robot-classification.jpg",
            "alt": "VS Code running Python script",
            "caption": "Step 2: Write and execute the Python joint control code"
          }
        },
        {
          "text": "Modify joint positions in the Python script to observe different robot movements",
          "step_image": {
            "src": "robot-types.jpg",
            "alt": "Adjusting joint coordinates",
            "caption": "Step 3: Change joint coordinates in code and rerun"
          }
        },
        {
          "text": "Keep RViz window open to visualize real-time robot joint movements",
          "step_image": {
            "src": "rviz-screenshot.png",
            "alt": "RViz visualization of joint movement",
            "caption": "Step 4: View robot motion in RViz"
          }
        },
        {
          "text": "Congratulate learner on successfully controlling robot joints",
          "step_image": {
            "src": "congrats-robot.png",
            "alt": "Congratulations message",
            "caption": "Step 5: Task complete, robot movement controlled"
          }
        }
      ],
      "task_images": [
        {
          "src": "robot-arm-hero.jpg",
          "alt": "Robot arm in motion",
          "caption": "Robot arm movement visualization"
        },
        {
          "src": "robot-classification.jpg",
          "alt": "Robot types classification",
          "caption": "Types and classifications of robots"
        },
        {
          "src": "robot-types.jpg",
          "alt": "Robot technical details",
          "caption": "Robot joints, DOF, and collaboration"
        }
      ]
    },
    "quiz": {
      "question": "Which level of robot collaboration involves robots and humans working in direct contact and cooperation?",
      "options": [
        "Coexistence",
        "Sequential",
        "Cooperation",
        "Responsive Collaboration (Cobots)"
      ],
      "correct_answer": 3,
      "explanation_image": {
        "src": "robot-collaboration-levels.jpg",
        "alt": "Robot collaboration levels explained"
      }
    },
    "chat_contexts": {
      "robot_classification": "Explain mechanical structures like Cartesian, SCARA, Articulated, and Delta robots",
      "robot_joints_dof": "Detail types of robot joints and degrees of freedom with examples",
      "robot_collaboration": "Discuss collaboration levels including cobots and their applications",
      "robot_components": "Describe sensors, actuators, and controllers essential to robots",
      "robot_generations": "Outline robot generations from manipulators to AI-enabled robots",
      "robot_morphology": "Discuss various robot shapes including anthropomorphic, zoomorphic, and technomorphic"
    }
  }
  